AWSTemplateFormatVersion: 2010-09-09
Description: EKS Playground - IAM Roles for Pods (IAM Roles Service Accounts)
Parameters:
  StackNamePrefix:
    Description: A prefix for the stacks in this setup.
    Type: String

  OIDCIssuerUrl:
    Description: URL for OIDC Provider
    Type: String

  OIDCIssuerThumbprint:
    Description: Thumbprint for OIDC provider
    Type: String

Resources:
  OIDCProvider:
    Type: AWS::IAM::OIDCProvider
    Properties:
      ClientIdList:
        - sts.amazonaws.com
      Tags:
        - { Key: Name, Value: !Sub '${AWS::StackName}-OIDCProvider' }
      ThumbprintList:
        - !Ref OIDCIssuerThumbprint
      Url: !Ref OIDCIssuerUrl

  ClusterAutoscalerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        - |
          {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Principal": { "Federated": "arn:aws:iam::${AWS::AccountId}:oidc-provider/${OIDCProviderId}" },
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                  "${OIDCProviderId}:sub": "system:serviceaccount:kube-system:cluster-autoscaler"
                }
              }
            }]
          }
        - OIDCProviderId: !Select [1, !Split ['oidc-provider/', !Ref OIDCProvider]]
      RoleName: !Sub ${AWS::StackName}-cluster-autoscaler-role
      Policies:
      - PolicyName: K8SClusterAutoscalerPolicy
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Sid: AllowReadOnlyActions
              Effect: Allow
              Action:
                - autoscaling:DescribeAutoScalingGroups
                - autoscaling:DescribeAutoScalingInstances
                - autoscaling:DescribeLaunchConfigurations
                - autoscaling:DescribeTags
              Resource: "*"
            - Sid: AllowASGManagement
              Effect: Allow
              Action:
                - autoscaling:SetDesiredCapacity
                - autoscaling:TerminateInstanceInAutoScalingGroup
              Resource:
                - !Sub arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:autoScalingGroup:*:autoScalingGroupName/eks-*
              Condition:
                StringEquals:
                  aws:ResourceTag/eks:cluster-name: !Sub ${StackNamePrefix}-eks-cluster

  IrsaTestRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        - |
          {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Principal": { "Federated": "arn:aws:iam::${AWS::AccountId}:oidc-provider/${OIDCProviderId}" },
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                  "${OIDCProviderId}:sub": "system:serviceaccount:default:irsa-test"
                }
              }
            }]
          }
        - OIDCProviderId: !Select [1, !Split ['oidc-provider/', !Ref OIDCProvider]]

      RoleName: !Sub ${AWS::StackName}-irsa-test
      Path: /
      Policies:
      - PolicyName: TestAccess
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Sid: TestAccess
            Effect: Allow
            Action:
            - eks:ListClusters
            Resource: '*'

  SparkRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        - |
          {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Principal": { "Federated": "arn:aws:iam::${AWS::AccountId}:oidc-provider/${OIDCProviderId}" },
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                  "${OIDCProviderId}:sub": "system:serviceaccount:default:spark"
                }
              }
            }]
          }
        - OIDCProviderId: !Select [1, !Split ['oidc-provider/', !Ref OIDCProvider]]
      RoleName: !Sub ${AWS::StackName}-spark-role
      Policies:
      - PolicyName: SparkDataAccessPolicy
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Sid: AccessToNotebookBucket
              Effect: Allow
              Action:
                - s3:ListBucket
                - s3:DeleteObject
                - s3:GetObject
                - s3:PutObject
              Resource:
                - !Sub 'arn:aws:s3:::${StackNamePrefix}-spark-jupyter-notebooks'
                - !Sub 'arn:aws:s3:::${StackNamePrefix}-spark-jupyter-notebooks/*'
            - Sid: AccessToSampleDataBuckets
              Effect: Allow
              Action:
                - s3:ListBucket
                - s3:GetObject
              Resource:
                - 'arn:aws:s3:::amazon-reviews-pds'
                - 'arn:aws:s3:::amazon-reviews-pds/*'
                - 'arn:aws:s3:::ew1-infra-trail'
                - 'arn:aws:s3:::ew1-infra-trail/*'

  FluentBitLoggingRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        - |
          {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Principal": { "Federated": "arn:aws:iam::${AWS::AccountId}:oidc-provider/${OIDCProviderId}" },
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                  "${OIDCProviderId}:sub": "system:serviceaccount:default:fluent-bit"
                }
              }
            }]
          }
        - OIDCProviderId: !Select [1, !Split ['oidc-provider/', !Ref OIDCProvider]]
      RoleName: !Sub ${AWS::StackName}-logging-role
      Path: /
      Policies:
      - PolicyName: FluentBitLoggingPolicy
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Sid: AllowLoggingActions
              Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:DescribeLogStreams
                - logs:PutLogEvents
              Resource:
                - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${StackNamePrefix}-base-logging-container-logs:*'

Outputs:
  OIDCProviderArn:
    Value: !Ref OIDCProvider
  OIDCProviderId:
    Value: !Select [1, !Split ['oidc-provider/', !Ref OIDCProvider]]
